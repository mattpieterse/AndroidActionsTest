name: Enforce Commit Message Format

on:
  push:  # Run on every push to any branch

jobs:
  check-commit-messages:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for full commit diff

      - name: Get and validate commit messages
        run: |
          echo "üîç Checking commits between ${{ github.event.before }} and ${{ github.sha }}..."

          git log --pretty=format:'%h|%s' ${{ github.event.before }}..${{ github.sha }} > commits.txt

          echo "üìã Validating commit message format..."
          VALID=true

          while IFS= read -r line; do
            COMMIT_HASH=$(echo "$line" | cut -d'|' -f1)
            COMMIT_MSG=$(echo "$line" | cut -d'|' -f2- | xargs)  # Trim leading/trailing space

            echo "‚Üí [$COMMIT_HASH] $COMMIT_MSG"

            # Regex: conventional commits with optional scope + optional ! + colon + space + message
            if [[ ! "$COMMIT_MSG" =~ ^(feat|fix|docs|style|refactor|test|chore|ci|build|perf|revert)(\([a-z0-9-]+\))?(!)?:\ .+ ]]; then
              echo "::error file=commits.txt,line=1::‚ùå Invalid commit message: \"$COMMIT_MSG\""
              VALID=false
            fi
          done < commits.txt

          if [ "$VALID" = false ]; then
            echo "‚ùå One or more commit messages are invalid."
            exit 1
          fi

          echo "‚úÖ All commit messages are valid."
